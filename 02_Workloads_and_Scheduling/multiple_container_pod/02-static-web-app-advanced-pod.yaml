apiVersion: v1
kind: Pod
metadata:
  name: static-web-app-advanced
  namespace: doit-lab-02
  labels:
    k8s-app: static-web-app-advanced
    k8s-scope: gke-ws-doit-lab-02
spec:
  #
  # An initContainer in Kubernetes is a special type of container that runs to completion before the main app’s container
  # and the pod will repeatedly restart until all of them succeed. It’s sometimes necessary to prepare the primary container
  # which will be running our application or the main logic, and it's accomplished through initContainers.
  # Here with the initContainer we just create the file /scratch/data with some text in it, which is then mounted into
  # the main application container.
  # --
  initContainers:
    - name: 000-static-web-app-advanced-init-c
      image: busybox:1.28
      command:
        - /bin/sh
      args:
        - -c
        - echo 'Initializing data for the main container' | tee /scratch/data
      volumeMounts:
        - mountPath: /scratch
          name: scratch
  #
  # These are our two primary container definitions within the pod. Both containers share the same namespaces, cgroups
  # and potentially other facets of isolation - the same things that isolate a Docker container. Within a Pod's context,
  # the individual applications may have further sub-isolations applied. We use `subPath` to mount only the index.html file
  # from the ConfigMap into the nginx container. If we didn't use `subPath`, the entire volume would be mounted over
  # the /usr/share/nginx/html directory, hiding all the default nginx files.
  # --
  containers:
    - name: 001-static-web-app-c
      image: nginx:alpine
      ports:
        - name: http-80
          containerPort: 80
          protocol: TCP
      volumeMounts:
        - mountPath: /usr/share/nginx/html/index.html
          name: index-html
          subPath: index.html
        - mountPath: /scratch
          name: scratch
    - name: 002-static-web-app-sidecar-c
      image: busybox:1.28
      command: ["sh", "-c"]
      args:
        - while true; do
          echo "I'm really busy right now ... please come back later!";
          sleep 30;
          done;
  #
  # Volumes of different types can be defined in the pod spec and then mounted to
  # individual containers using the volumeMounts fields of the container spec.
  # --
  volumes:
    - name: index-html
      configMap:
        name: static-web-app-advanced-index
    - name: scratch
      emptyDir: {}
